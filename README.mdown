Code for the web site [https://www.unixtimesta.mp/](https://www.unixtimesta.mp/).

[![Build Status](https://travis-ci.org/craiga/unixtimesta.mp.svg?branch=master)](https://travis-ci.org/craiga/unixtimesta.mp) [![Requirements Status](https://requires.io/github/craiga/unixtimesta.mp/requirements.svg?branch=master)](https://requires.io/github/craiga/unixtimesta.mp/requirements/?branch=master) [![codecov](https://codecov.io/gh/craiga/unixtimesta.mp/branch/master/graph/badge.svg)](https://codecov.io/gh/craiga/unixtimesta.mp) [![Maintainability](https://api.codeclimate.com/v1/badges/bd45bad0c1d6d7484bb0/maintainability)](https://codeclimate.com/github/craiga/unixtimesta.mp)


# Getting Started for Development

First, check out the code:

    git clone https://github.com/craiga/unixtimesta.mp.git
    cd unixtimesta.mp

Set up the project by creating a Pipenv virtual environment.

    pipenv install --dev

You'll also need a self-signed SSL certificate. [Heroku provide some instructions on how to do that.](https://devcenter.heroku.com/articles/ssl-certificate-self)

Finally, run the the Flask development server and access the application in a web browser at [https://localhost:5000](https://localhost:5000).

    FLASK_DEBUG=1 pipenv run flask run --cert server.crt --key server.key

Note that you'll need to configure your browser to allow for your self-signed certificate.


# Ensuring Code Quality

The most important way to ensure code quality is to run the test suite with [nose](https://nose.readthedocs.io/en/latest/) and [behave](http://behave.readthedocs.io/en/latest/).

    pipenv run nosetests
    pipenv run behave

Setting up this project will install [pycodestyle](http://pycodestyle.pycqa.org/), [pydocstyle](http://www.pydocstyle.org) and [Pylint](https://www.pylint.org). These help test for adherance to [PEP 8](https://www.python.org/dev/peps/pep-0008/), [PEP 257](https://www.python.org/dev/peps/pep-0257/) and other generally-accepted best Python coding practices.

    pipenv run pycodestyle
    pipenv run pydocstyle
    find . -iname "*.py" | xargs pipenv run pylint

Note that Travis CI is set up to automatically run these when commits are pushed to GitHub. If any of them fail, you should be notified of it.


# Credits

Icon adapted from http://openclipart.org/detail/192402/clock-icon-by-cinemacookie-192402.


# Reporting Issues

[Report bugs, issues and requests through GitHub.](https://github.com/craiga/unixtimesta.mp/issues)
